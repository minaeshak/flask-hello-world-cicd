name: Minikube Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Minikube
      run: |
        sudo apt-get update
        sudo apt-get install -y conntrack socat
        curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        sudo install minikube /usr/local/bin/

    - name: Start Minikube
      run: |
        minikube start --driver=docker
        minikube status
        eval $(minikube docker-env) 

    - name: Build, Tag, and Push Docker Image
      run: |
        COMMIT_HASH=${{ github.sha }}
        docker build -t flask-hello-world:${COMMIT_HASH} .
        docker tag flask-hello-world:${COMMIT_HASH} minaeshak/flask-hello-world:${COMMIT_HASH}
        docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
        docker push minaeshak/flask-hello-world:${COMMIT_HASH}

    - name: Apply Kubernetes manifests
      run: |
        IMAGE_TAG=${{ github.sha }}
        export IMAGE_TAG
        envsubst < k8s/deployment.yaml | kubectl apply -f -
        envsubst < k8s/service.yaml | kubectl apply -f -


    - name: Wait for Flask app deployment
      run: |
        kubectl rollout status deployment/flask-app

    - name: Get service URL
      id: get-url
      run: |
        SERVICE_URL=$(minikube service flask-app --url)
        echo "SERVICE_URL=${SERVICE_URL}" >> $GITHUB_ENV

    - name: Verify Flask app output
      run: |
        curl -s ${{ env.SERVICE_URL }}